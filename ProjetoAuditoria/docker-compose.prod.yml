version: '3.8'

services:
  seo-audit-api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: seo-audit-api
    restart: unless-stopped
    ports:
      - "5000:5000"
      - "9090:9090"  # Porta para métricas
    environment:
      - ENVIRONMENT=production
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=false
      
      # Banco de Dados
      - DATABASE_PATH=/app/data/audit_history.db
      - DATABASE_POOL_SIZE=10
      - DATABASE_TIMEOUT=30
      
      # Cache
      - CACHE_MEMORY_SIZE=200
      - CACHE_DISK_SIZE=2000
      - CACHE_TTL=3600
      - CACHE_DISK_PATH=/app/cache
      
      # Processamento Assíncrono
      - ASYNC_MAX_WORKERS=6
      - ASYNC_QUEUE_SIZE=200
      - ASYNC_ENABLE_RETRY=true
      - ASYNC_MAX_RETRIES=3
      
      # Logging
      - LOG_LEVEL=INFO
      - LOG_FILE_PATH=/app/logs
      - LOG_MAX_BYTES=10485760
      - LOG_BACKUP_COUNT=10
      - ENABLE_JSON_LOGGING=true
      
      # Segurança
      - RATE_LIMIT_STORAGE_URL=memory://
      - RATE_LIMIT_DEFAULT=200 per hour
      - IP_WHITELIST=${IP_WHITELIST:-127.0.0.1,::1}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      
      # APIs Externas
      - PAGESPEED_API_KEY=${PAGESPEED_API_KEY}
      - SEMRUSH_API_KEY=${SEMRUSH_API_KEY}
      - AHREFS_API_KEY=${AHREFS_API_KEY}
      - SCREAMING_FROG_PATH=/opt/screamingfrog/ScreamingFrogSEOSpider
      
      # Gunicorn
      - GUNICORN_WORKERS=4
      - GUNICORN_WORKER_CLASS=sync
      - GUNICORN_WORKER_CONNECTIONS=1000
      - GUNICORN_MAX_REQUESTS=2000
      - GUNICORN_MAX_REQUESTS_JITTER=200
      - GUNICORN_TIMEOUT=300
      - GUNICORN_KEEPALIVE=5
      
      # Monitoramento
      - ENABLE_METRICS=true
      - METRICS_PORT=9090
      - HEALTH_CHECK_INTERVAL=30
      
      # Upload e Relatórios
      - MAX_CONTENT_LENGTH=33554432  # 32MB
      - UPLOAD_FOLDER=/app/uploads
      - REPORTS_FOLDER=/app/reports
      - TEMP_FOLDER=/app/temp
    
    volumes:
      - audit_data:/app/data
      - audit_cache:/app/cache
      - audit_logs:/app/logs
      - audit_uploads:/app/uploads
      - audit_reports:/app/reports
      - audit_temp:/app/temp
    
    networks:
      - seo-audit-network
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: seo-audit-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - audit_logs:/var/log/nginx
    networks:
      - seo-audit-network
    depends_on:
      - seo-audit-api
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus para monitoramento (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: seo-audit-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - seo-audit-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana para visualização (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: seo-audit-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - seo-audit-network
    depends_on:
      - prometheus

volumes:
  audit_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DATA_PATH:-./data}
  
  audit_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${CACHE_PATH:-./cache}
  
  audit_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_PATH:-./logs}
  
  audit_uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${UPLOADS_PATH:-./uploads}
  
  audit_reports:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${REPORTS_PATH:-./reports}
  
  audit_temp:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${TEMP_PATH:-./temp}
  
  prometheus_data:
  grafana_data:

networks:
  seo-audit-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16